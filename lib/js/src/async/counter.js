// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

function increaseCount(_, param) {
  var state = param[/* state */3];
  console.log("increasing");
  return /* Update */Block.__(0, [/* record */[
              /* count */state[/* count */0] + 1 | 0,
              /* timerId */state[/* timerId */1]
            ]]);
}

function handleInterval(update, id) {
  console.log("handling");
  return Curry._2(update, increaseCount, id);
}

var component = ReasonReact.statefulComponent("Counter");

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (param) {
      var enqueue = param[/* enqueue */0];
      /* Some */[setInterval((function (param) {
                return handleInterval(enqueue, param);
              }), 10000)];
      handleInterval(enqueue, 0);
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (param) {
      return React.createElement("div", undefined, Pervasives.string_of_int(param[/* state */3][/* count */0]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* count */0,
              /* timerId : None */0
            ];
    });
  return newrecord;
}

exports.increaseCount  = increaseCount;
exports.handleInterval = handleInterval;
exports.component      = component;
exports.make           = make;
/* component Not a pure module */
